//
//  ItemDetailViewController.swift
//  CleanSwift
//
//  Created by Henry on 9/10/17.
//  Copyright (c) 2017 Henry Tsai. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import WebKit
import BusinessLogic

protocol ItemDetailDisplayLogic: class {
	func showDetail(viewModel: ItemDetailViewController.ViewModel)
}

class ItemDetailViewController: UIViewController {
    @IBOutlet weak var webView: WKWebView!
    struct ViewModel {
        let url: URL
    }
	var interactor: ItemDetailBusinessLogic?
	var router: (NSObjectProtocol & ItemDetailRoutingLogic & ItemDetailDataPassing)?

	// MARK: Object lifecycle
	override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
    	super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    	setup()
    }
  
  	required init?(coder aDecoder: NSCoder) {
	    super.init(coder: aDecoder)
    	setup()
  	}
  
  	// MARK: Setup
  	private func setup() {
	    let viewController = self
    	let interactor = ItemDetailInteractor()
    	let presenter = ItemDetailPresenter()
    	let router = ItemDetailRouter()
    	viewController.interactor = interactor
    	viewController.router = router
    	interactor.presenter = presenter
    	presenter.viewController = viewController
    	router.viewController = viewController
    	router.dataStore = interactor
    }
    
  	// MARK: View lifecycle
  	override func viewDidLoad() {
   		super.viewDidLoad()
        interactor?.displayDetail(request: ItemDetail.DisplayDetail.Request())
  	}  
}

extension ItemDetailViewController: ItemDetailDisplayLogic {
    func showDetail(viewModel: ItemDetailViewController.ViewModel) {
        let myRequest = URLRequest(url: viewModel.url)
        webView.load(myRequest)
    }
}
