//
//  TabNavigationViewController.swift
//  CleanSwift
//
//  Created by Henry on 9/11/17.
//  Copyright (c) 2017 Henry Tsai. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol TabNavigationDisplayLogic: class {
	func initTabs(viewModel: TabNavigationViewController.ViewModel)
}

class TabNavigationViewController: UITabBarController {
    struct ViewModel { }
	var interactor: TabNavigationBusinessLogic?
	var router: (NSObjectProtocol & TabNavigationRoutingLogic)?

	// MARK: Object lifecycle
	override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
    	super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    	setup()
    }
  
  	required init?(coder aDecoder: NSCoder) {
	    super.init(coder: aDecoder)
    	setup()
  	}
  
  	// MARK: Setup
  	private func setup() {
	    let viewController = self
    	let interactor = TabNavigationInteractor()
    	let presenter = TabNavigationPresenter()
    	let router = TabNavigationRouter()
    	viewController.interactor = interactor
    	viewController.router = router
    	interactor.presenter = presenter
    	presenter.viewController = viewController
    	router.viewController = viewController
    }

    // MARK: View lifecycle
  	override func viewDidLoad() {
   		super.viewDidLoad()
  	}
    
    override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)
        initTabs()
        self.view.backgroundColor = UIColor.green
    }
  
	// MARK: Do something
	func initTabs() {
		let request = TabNavigation.InitTabs.Request()
    	interactor?.initTabs(request: request)
  	}
}

extension TabNavigationViewController: TabNavigationDisplayLogic {
  	func initTabs(viewModel: TabNavigationViewController.ViewModel) {
        router?.initTabs()
  	}
}
