//
//  ListPresenter.swift
//  CleanSwift
//
//  Created by Henry on 9/9/17.
//  Copyright (c) 2017 Henry Tsai. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import ITunesFeed
import BusinessLogic

class ListPresenter: ListPresentationLogic {
    weak var viewController: ListDisplayLogic?
    func presentList(list: [ITunesFeed.Track]) {
        DispatchQueue.main.async { [weak self] in
            let items = list.flatMap{$0.toListViewControllerItem()}
            let viewModel = ListViewController.ViewModel(items: items)
            self?.viewController?.displayList(viewModel: viewModel)
        }
    }
    func presentTrack(track: ITunesFeed.Track) {
        guard let itemDetailURL = URL(string: track.detailURL) else { return }
        DispatchQueue.main.async { [weak self] in
            self?.viewController?.displayItemDetail(url: itemDetailURL)
        }
    }
}

extension ITunesFeed.Track {
    func toListViewControllerItem() -> ListViewController.ViewModel.Item? {
        return ListViewController.ViewModel.Item(itemId: trackId, title: name, subtitle: artistName, imageURL: URL(string: artWorkURL))
    }
}
