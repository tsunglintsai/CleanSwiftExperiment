//
//  LoginInteractor.swift
//  CleanSwift
//
//  Created by Henry on 9/9/17.
//  Copyright (c) 2017 Henry Tsai. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import Foundation

protocol LoginBusinessLogic {
    func login(request: Login.DoLogin.Request)
}

protocol LoginDataStore {
}

class LoginInteractor: LoginDataStore {
    var presenter: LoginPresentationLogic?
    var worker: PerformLoginWorker = PerformLoginWorker()
    var entityManager: EntityManager = EntityManagerWithUserDefault()
}

extension LoginInteractor: LoginBusinessLogic {
    func login(request: Login.DoLogin.Request) {
        worker.performLogin(userId: request.userId, password: request.password) { [weak self] (success, accessToken, refreshToken) -> (Void) in
            if success {
                let userData = UserData(userId: request.userId, accessToken: accessToken, refreshToken: refreshToken)
                self?.entityManager.saveUserData(userData: userData)
                self?.presenter?.loginSuccess()
            } else {
                print("--------")
            }
        }
    }
}
